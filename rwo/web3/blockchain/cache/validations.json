{
  "version": "3.4",
  "log": [
    {
      "contracts/approver.sol:FnxTokenApprover": {
        "src": "contracts\\approver.sol:78",
        "version": {
          "withMetadata": "3bb93bc9e926f9f25286e2ecdcf4b35000eae1e1eb08f0edce1ec7239d050c58",
          "withoutMetadata": "047367ec6aca8f7bb1b1486d188e47b9a0b643a85b80e4fb6969c189bdf0b2dd",
          "linkedWithoutMetadata": "047367ec6aca8f7bb1b1486d188e47b9a0b643a85b80e4fb6969c189bdf0b2dd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "SetTokenAddress(address)",
          "GetUserTokenBalance()",
          "ApproveTokens(uint256)",
          "GetAllowance()",
          "AcceptPayment(uint256)",
          "GetContractTokenBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FnxTokenApprover",
            "src": "contracts\\approver.sol:83"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)77",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:79"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/approver.sol:IERC20": {
        "src": "contracts\\approver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "contracts/approver.sol:FnxTokenApprover": {
        "src": "contracts\\approver.sol:78",
        "version": {
          "withMetadata": "b909ae90213b775f289dc8f46d7b99d680cdf5b2047efa5a800b8bc2e0e77c13",
          "withoutMetadata": "efc6ac599b9d86bc32e3c75d95a126a35bf83a67cff52497f822a8836728ce26",
          "linkedWithoutMetadata": "efc6ac599b9d86bc32e3c75d95a126a35bf83a67cff52497f822a8836728ce26"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "SetTokenAddress(address)",
          "GetUserTokenBalance()",
          "ApproveTokens(uint256)",
          "GetAllowance()",
          "AcceptPayment(uint256)",
          "GetContractTokenBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FnxTokenApprover",
            "src": "contracts\\approver.sol:83"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)77",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:79"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/approver.sol:IERC20": {
        "src": "contracts\\approver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "contracts/approver.sol:FnxTokenApprover": {
        "src": "contracts\\approver.sol:78",
        "version": {
          "withMetadata": "b43afede9d3e592fba2fd9f9a37932c7fd410d474110182f3b0358ea07e642e6",
          "withoutMetadata": "6fe82657bb48058275a7718ea1a3854ebe90a5e700b643e72496f8fbe6a08ff4",
          "linkedWithoutMetadata": "6fe82657bb48058275a7718ea1a3854ebe90a5e700b643e72496f8fbe6a08ff4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "SetTokenAddress(address)",
          "GetUserTokenBalance()",
          "ApproveTokens(uint256)",
          "GetAllowance()",
          "AcceptPayment(uint256)",
          "GetContractTokenBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FnxTokenApprover",
            "src": "contracts\\approver.sol:83"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)77",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:79"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/approver.sol:IERC20": {
        "src": "contracts\\approver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "contracts/approver.sol:FnxTokenApprover": {
        "src": "contracts\\approver.sol:78",
        "version": {
          "withMetadata": "a37ef930a5b53c34fe0a8f2a3f33e81f8fd13ef6ac4b45a25f1b699082d0e517",
          "withoutMetadata": "2b30b8c2e9f5cf0d785a398a38cf49977b4ea6d90b3e8418aca49459eccf27b0",
          "linkedWithoutMetadata": "2b30b8c2e9f5cf0d785a398a38cf49977b4ea6d90b3e8418aca49459eccf27b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setTokenContract(address)",
          "GetUserTokenBalance()",
          "Approvetokens(uint256)",
          "GetAllowance()",
          "AcceptPayment(uint256)",
          "GetContractTokenBalance()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FnxTokenApprover",
            "src": "contracts\\approver.sol:83"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)77",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:79"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/approver.sol:IERC20": {
        "src": "contracts\\approver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "e9cc14ab959c4cd9367b0c2040400dd10cf52c478f8159e2d44d3e68c89055c4",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/RandomToken.sol:RandomToken": {
        "src": "contracts\\RandomToken.sol:8",
        "version": {
          "withMetadata": "fbd55aa4a7717b7623d4fbaad7cf3d5b7b0045378b59ba5406612a1a8a839e3b",
          "withoutMetadata": "f15d7f98822e95f8fc5749df3e4d2b043b1f5dbd5fcae3e590cbed2f1d80efdd",
          "linkedWithoutMetadata": "f15d7f98822e95f8fc5749df3e4d2b043b1f5dbd5fcae3e590cbed2f1d80efdd"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RandomToken",
            "src": "contracts\\RandomToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/approver.sol:FnxTokenApprover": {
        "src": "contracts\\approver.sol:78",
        "version": {
          "withMetadata": "0ac0b363136f4f4ee1660a45d8efaa6950617e8e9dd27c58f2edb0a02e9ea294",
          "withoutMetadata": "6552a18e62159ab29371b9ea1bfb53184b8902e0d5c0f65a7494be0321fa6f68",
          "linkedWithoutMetadata": "6552a18e62159ab29371b9ea1bfb53184b8902e0d5c0f65a7494be0321fa6f68"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setTokenContract(address)",
          "GetUserTokenBalance()",
          "Approvetokens(uint256)",
          "GetAllowance()",
          "AcceptPayment(uint256)",
          "GetContractTokenBalance()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)977",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:79"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "FnxTokenApprover",
              "src": "contracts\\approver.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)977": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.17"
      },
      "contracts/approver.sol:IERC20": {
        "src": "contracts\\approver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      },
      "contracts/hello.sol:HelloWorld": {
        "src": "contracts\\hello.sol:4",
        "version": {
          "withMetadata": "76156f7053d359ff087be585b16da00e1fdc16c62171959f2aea90d720c86ff4",
          "withoutMetadata": "ace9303c788ed9e97ae55bf4a7ae539a2fa0f192f6c0cf3765d185c573db9940",
          "linkedWithoutMetadata": "ace9303c788ed9e97ae55bf4a7ae539a2fa0f192f6c0cf3765d185c573db9940"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "sayHelloWorld()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}